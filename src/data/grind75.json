{
  "data": [
    {
      "slug": "two-sum",
      "title": "Two Sum",
      "url": "https://leetcode.com/problems/two-sum",
      "duration": 15,
      "epi": null,
      "difficulty": "Easy",
      "id": "43",
      "routines": ["hashing"],
      "pattern": ["Arrays"],
      "solution": "https://leetcode.com/problems/two-sum/solutions/5862553/python-brute-force-hashmap/"
    },
    {
      "slug": "valid-parentheses",
      "title": "Valid Parentheses",
      "url": "https://leetcode.com/problems/valid-parentheses",
      "duration": 20,
      "epi": 3,
      "difficulty": "Easy",
      "id": "51",
      "routines": [],
      "pattern": ["Stack"]
    },
    {
      "slug": "merge-two-sorted-lists",
      "title": "Merge Two Sorted Lists",
      "url": "https://leetcode.com/problems/merge-two-sorted-lists",
      "duration": 20,
      "epi": 0,
      "difficulty": "Easy",
      "id": "58",
      "routines": [],
      "pattern": ["Linked List"],
      "solution": "https://leetcode.com/problems/merge-two-sorted-lists/solutions/5862336/python-merge-two-linked-lists/"
    },
    {
      "slug": "best-time-to-buy-and-sell-stock",
      "title": "Best Time to Buy and Sell Stock",
      "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock",
      "duration": 20,
      "epi": 0,
      "difficulty": "Easy",
      "id": "6",
      "routines": [],
      "pattern": ["Arrays"],
      "solution": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/solutions/5858039/python-2-approaches-brute-force-remember-lowest-stock-price/"
    },
    {
      "slug": "valid-palindrome",
      "title": "Valid Palindrome",
      "url": "https://leetcode.com/problems/valid-palindrome",
      "duration": 15,
      "epi": 2,
      "difficulty": "Easy",
      "id": "24",
      "routines": ["palindrome"],
      "pattern": ["String"]
    },
    {
      "slug": "invert-binary-tree",
      "title": "Invert Binary Tree",
      "url": "https://leetcode.com/problems/invert-binary-tree",
      "duration": 15,
      "epi": null,
      "difficulty": "Easy",
      "id": "69",
      "routines": [],
      "pattern": ["Binary Tree"],
      "solution": "https://leetcode.com/problems/invert-binary-tree/solutions/5856996/python-2-approaches-dfs-3-line-dfs/"
    },
    {
      "slug": "valid-anagram",
      "title": "Valid Anagram",
      "url": "https://leetcode.com/problems/valid-anagram",
      "duration": 15,
      "epi": null,
      "difficulty": "Easy",
      "id": "41",
      "routines": ["anagram"],
      "pattern": ["String"]
    },
    {
      "slug": "binary-search",
      "title": "Binary Search",
      "url": "https://leetcode.com/problems/binary-search",
      "duration": 15,
      "epi": null,
      "difficulty": "Easy",
      "id": "150",
      "routines": [],
      "pattern": ["Binary Search"],
      "solution": "https://leetcode.com/problems/binary-search/solutions/5853985/python-binary-search/"
    },
    {
      "slug": "flood-fill",
      "title": "Flood Fill",
      "url": "https://leetcode.com/problems/flood-fill",
      "duration": 20,
      "epi": 2,
      "difficulty": "Easy",
      "id": "151",
      "routines": ["matrix", "depth-first-search"],
      "pattern": ["Graph"]
    },
    {
      "slug": "lowest-common-ancestor-of-a-binary-search-tree",
      "title": "Lowest Common Ancestor of a Binary Search Tree",
      "url": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",
      "duration": 20,
      "epi": 1,
      "difficulty": "Easy",
      "id": "152",
      "routines": [],
      "pattern": ["Binary Search Tree"],
      "solution": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/solutions/5938252/python-dfs/"
    },
    {
      "slug": "balanced-binary-tree",
      "title": "Balanced Binary Tree",
      "url": "https://leetcode.com/problems/balanced-binary-tree",
      "duration": 15,
      "epi": 0,
      "difficulty": "Easy",
      "id": "153",
      "routines": [],
      "pattern": ["Binary Tree"]
    },
    {
      "slug": "linked-list-cycle",
      "title": "Linked List Cycle",
      "url": "https://leetcode.com/problems/linked-list-cycle",
      "duration": 20,
      "epi": 1,
      "difficulty": "Easy",
      "id": "56",
      "routines": ["two-pointers"],
      "pattern": ["Linked List"],
      "solution": "https://leetcode.com/problems/linked-list-cycle/solutions/5857684/python-two-pointer-fast-slow-approach/"
    },
    {
      "slug": "implement-queue-using-stacks",
      "title": "Implement Queue using Stacks",
      "url": "https://leetcode.com/problems/implement-queue-using-stacks",
      "duration": 20,
      "epi": 3,
      "difficulty": "Easy",
      "id": "154",
      "routines": [],
      "pattern": ["Stack"]
    },
    {
      "slug": "first-bad-version",
      "title": "First Bad Version",
      "url": "https://leetcode.com/problems/first-bad-version",
      "duration": 20,
      "epi": null,
      "difficulty": "Easy",
      "id": "155",
      "routines": [],
      "pattern": ["Binary Search"]
    },
    {
      "slug": "ransom-note",
      "title": "Ransom Note",
      "url": "https://leetcode.com/problems/ransom-note",
      "duration": 15,
      "epi": 0,
      "difficulty": "Easy",
      "id": "38",
      "routines": [],
      "pattern": ["Hash Table"]
    },
    {
      "slug": "climbing-stairs",
      "title": "Climbing Stairs",
      "url": "https://leetcode.com/problems/climbing-stairs",
      "duration": 20,
      "epi": null,
      "difficulty": "Easy",
      "id": "136",
      "routines": [],
      "pattern": ["Dynamic Programming"],
      "solution": "https://leetcode.com/problems/climbing-stairs/solutions/5857570/python-3-approaches-dp-dp-memoization-iterative-dp-fibonacci/"
    },
    {
      "slug": "longest-palindrome",
      "title": "Longest Palindrome",
      "url": "https://leetcode.com/problems/longest-palindrome",
      "duration": 20,
      "epi": 2,
      "difficulty": "Easy",
      "id": "156",
      "routines": ["palindrome"],
      "pattern": ["String"]
    },
    {
      "slug": "reverse-linked-list",
      "title": "Reverse Linked List",
      "url": "https://leetcode.com/problems/reverse-linked-list",
      "duration": 20,
      "epi": 1,
      "difficulty": "Easy",
      "id": "157",
      "routines": [],
      "pattern": ["Linked List"],
      "solution": "https://leetcode.com/problems/reverse-linked-list/solutions/5862010/python-reversal-of-a-linked-list/"
    },
    {
      "slug": "majority-element",
      "title": "Majority Element",
      "url": "https://leetcode.com/problems/majority-element",
      "duration": 20,
      "epi": 2,
      "difficulty": "Easy",
      "id": "4",
      "routines": ["sorting"],
      "pattern": ["Arrays"],
      "solution": "https://leetcode.com/problems/majority-element/solutions/5862290/python-sorting-hashmap-moore-s-voting-algorithm/"
    },
    {
      "slug": "add-binary",
      "title": "Add Binary",
      "url": "https://leetcode.com/problems/add-binary",
      "duration": 15,
      "epi": null,
      "difficulty": "Easy",
      "id": "124",
      "routines": [],
      "pattern": ["Binary"]
    },
    {
      "slug": "diameter-of-binary-tree",
      "title": "Diameter of Binary Tree",
      "url": "https://leetcode.com/problems/diameter-of-binary-tree",
      "duration": 30,
      "epi": null,
      "difficulty": "Easy",
      "id": "158",
      "routines": [],
      "pattern": ["Binary Tree"],
      "solution": "https://leetcode.com/problems/diameter-of-binary-tree/solutions/5854371/python-dfs/"
    },
    {
      "slug": "middle-of-the-linked-list",
      "title": "Middle of the Linked List",
      "url": "https://leetcode.com/problems/middle-of-the-linked-list",
      "duration": 20,
      "epi": null,
      "difficulty": "Easy",
      "id": "159",
      "routines": ["two-pointers"],
      "pattern": ["Linked List"],
      "solution": "https://leetcode.com/problems/middle-of-the-linked-list/solutions/5708801/python-two-pointer-fast-and-slow-pointers/"
    },
    {
      "slug": "maximum-depth-of-binary-tree",
      "title": "Maximum Depth of Binary Tree",
      "url": "https://leetcode.com/problems/maximum-depth-of-binary-tree",
      "duration": 15,
      "epi": null,
      "difficulty": "Easy",
      "id": "67",
      "routines": [],
      "pattern": ["Binary Tree"],
      "solution": "https://leetcode.com/problems/maximum-depth-of-binary-tree/solutions/5711629/python-dfs/"
    },
    {
      "slug": "contains-duplicate",
      "title": "Contains Duplicate",
      "url": "https://leetcode.com/problems/contains-duplicate",
      "duration": 15,
      "epi": null,
      "difficulty": "Easy",
      "id": "160",
      "routines": ["hash-table", "sorting"],
      "pattern": ["Arrays"],
      "solution": "https://leetcode.com/problems/contains-duplicate/solutions/5844258/3-python-approaches-brute-force-sorting-set/"
    },
    {
      "slug": "min-stack",
      "title": "Min Stack",
      "url": "https://leetcode.com/problems/min-stack",
      "duration": 20,
      "epi": 0,
      "difficulty": "Medium",
      "id": "53",
      "routines": [],
      "pattern": ["Stack"]
    },
    {
      "slug": "maximum-subarray",
      "title": "Maximum Subarray",
      "url": "https://leetcode.com/problems/maximum-subarray",
      "duration": 20,
      "epi": null,
      "difficulty": "Medium",
      "id": "111",
      "routines": [],
      "pattern": ["Dynamic Programming"],
      "solution": "https://leetcode.com/problems/maximum-subarray/solutions/5955232/python-dynamic-programming/"
    },
    {
      "slug": "insert-interval",
      "title": "Insert Interval",
      "url": "https://leetcode.com/problems/insert-interval",
      "duration": 25,
      "epi": null,
      "difficulty": "Medium",
      "id": "49",
      "routines": ["interval"],
      "pattern": ["Arrays"]
    },
    {
      "slug": "01-matrix",
      "title": "01 Matrix",
      "url": "https://leetcode.com/problems/01-matrix",
      "duration": 30,
      "epi": null,
      "difficulty": "Medium",
      "id": "161",
      "routines": ["breadth-first-search"],
      "pattern": ["Graph"]
    },
    {
      "slug": "k-closest-points-to-origin",
      "title": "K Closest Points to Origin",
      "url": "https://leetcode.com/problems/k-closest-points-to-origin",
      "duration": 30,
      "epi": 1,
      "difficulty": "Medium",
      "id": "162",
      "routines": ["geometry"],
      "pattern": ["Heap"]
    },
    {
      "slug": "longest-substring-without-repeating-characters",
      "title": "Longest Substring Without Repeating Characters",
      "url": "https://leetcode.com/problems/longest-substring-without-repeating-characters",
      "duration": 30,
      "epi": null,
      "difficulty": "Medium",
      "id": "30",
      "routines": ["sliding-window"],
      "pattern": ["String"]
    },
    {
      "slug": "3sum",
      "title": "3Sum",
      "url": "https://leetcode.com/problems/3sum",
      "duration": 30,
      "epi": 0,
      "difficulty": "Medium",
      "id": "28",
      "routines": ["two-pointers"],
      "pattern": ["Arrays"]
    },
    {
      "slug": "binary-tree-level-order-traversal",
      "title": "Binary Tree Level Order Traversal",
      "url": "https://leetcode.com/problems/binary-tree-level-order-traversal",
      "duration": 20,
      "epi": 1,
      "difficulty": "Medium",
      "id": "83",
      "routines": [],
      "pattern": ["Binary Tree"],
      "solution": "https://leetcode.com/problems/binary-tree-level-order-traversal/solutions/5922459/python-bfs/"
    },
    {
      "slug": "clone-graph",
      "title": "Clone Graph",
      "url": "https://leetcode.com/problems/clone-graph",
      "duration": 25,
      "epi": null,
      "difficulty": "Medium",
      "id": "90",
      "routines": ["depth-first-search", "breadth-first-search"],
      "pattern": ["Graph"]
    },
    {
      "slug": "evaluate-reverse-polish-notation",
      "title": "Evaluate Reverse Polish Notation",
      "url": "https://leetcode.com/problems/evaluate-reverse-polish-notation",
      "duration": 30,
      "epi": 2,
      "difficulty": "Medium",
      "id": "54",
      "routines": [],
      "pattern": ["Stack"]
    },
    {
      "slug": "course-schedule",
      "title": "Course Schedule",
      "url": "https://leetcode.com/problems/course-schedule",
      "duration": 30,
      "epi": null,
      "difficulty": "Medium",
      "id": "92",
      "routines": ["topo-sort"],
      "pattern": ["Graph"],
      "solution": "https://leetcode.com/problems/course-schedule/solutions/5921891/python-topological-sort-bfs-topological-sort-dfs/"
    },
    {
      "slug": "implement-trie-prefix-tree",
      "title": "Implement Trie (Prefix Tree)",
      "url": "https://leetcode.com/problems/implement-trie-prefix-tree",
      "duration": 35,
      "epi": null,
      "difficulty": "Medium",
      "id": "97",
      "routines": [],
      "pattern": ["Trie"],
      "solution": "https://leetcode.com/problems/implement-trie-prefix-tree/solutions/5933800/python-trie-design/"
    },
    {
      "slug": "coin-change",
      "title": "Coin Change",
      "url": "https://leetcode.com/problems/coin-change",
      "duration": 25,
      "epi": null,
      "difficulty": "Medium",
      "id": "139",
      "routines": [],
      "pattern": ["Dynamic Programming"],
      "solution": "https://leetcode.com/problems/coin-change/solutions/5958780/python-recursive-dp-recursive-dp-memoization-iterative-tabulation/"
    },
    {
      "slug": "product-of-array-except-self",
      "title": "Product of Array Except Self",
      "url": "https://leetcode.com/problems/product-of-array-except-self",
      "duration": 30,
      "epi": null,
      "difficulty": "Medium",
      "id": "12",
      "routines": ["prefix-sum"],
      "pattern": ["Arrays"],
      "solution": "https://leetcode.com/problems/product-of-array-except-self/solutions/5888354/python-brute-force-dp-prefix-sum/"
    },
    {
      "slug": "validate-binary-search-tree",
      "title": "Validate Binary Search Tree",
      "url": "https://leetcode.com/problems/validate-binary-search-tree",
      "duration": 20,
      "epi": null,
      "difficulty": "Medium",
      "id": "87",
      "routines": [],
      "pattern": ["Binary Search Tree"],
      "solution": "https://leetcode.com/problems/validate-binary-search-tree/solutions/5953909/python-dfs/"
    },
    {
      "slug": "number-of-islands",
      "title": "Number of Islands",
      "url": "https://leetcode.com/problems/number-of-islands",
      "duration": 25,
      "epi": null,
      "difficulty": "Medium",
      "id": "88",
      "routines": ["depth-first-search", " breadth-first-search"],
      "pattern": ["Graph"],
      "solution": "https://leetcode.com/problems/number-of-islands/solutions/5919100/python-dfs-bfs-union-find/"
    },
    {
      "slug": "rotting-oranges",
      "title": "Rotting Oranges",
      "url": "https://leetcode.com/problems/rotting-oranges",
      "duration": 30,
      "epi": null,
      "difficulty": "Medium",
      "id": "163",
      "routines": ["breadth-first-search"],
      "pattern": ["Graph"]
    },
    {
      "slug": "search-in-rotated-sorted-array",
      "title": "Search in Rotated Sorted Array",
      "url": "https://leetcode.com/problems/search-in-rotated-sorted-array",
      "duration": 30,
      "epi": 2,
      "difficulty": "Medium",
      "id": "116",
      "routines": [],
      "pattern": ["Binary Search"],
      "solution": "https://leetcode.com/problems/search-in-rotated-sorted-array/solutions/5928783/python-binary-search/"
    },
    {
      "slug": "combination-sum",
      "title": "Combination Sum",
      "url": "https://leetcode.com/problems/combination-sum",
      "duration": 30,
      "epi": null,
      "difficulty": "Medium",
      "id": "103",
      "routines": ["backtracking"],
      "pattern": ["Arrays"]
    },
    {
      "slug": "permutations",
      "title": "Permutations",
      "url": "https://leetcode.com/problems/permutations",
      "duration": 30,
      "epi": 2,
      "difficulty": "Medium",
      "id": "102",
      "routines": ["backtracking"],
      "pattern": ["Recursion"]
    },
    {
      "slug": "merge-intervals",
      "title": "Merge Intervals",
      "url": "https://leetcode.com/problems/merge-intervals",
      "duration": 30,
      "epi": 3,
      "difficulty": "Medium",
      "id": "48",
      "routines": ["interval"],
      "pattern": ["Arrays"],
      "solution": "https://leetcode.com/problems/merge-intervals/solutions/5964650/python-merge-intervals-intervals-sorting/"
    },
    {
      "slug": "lowest-common-ancestor-of-a-binary-tree",
      "title": "Lowest Common Ancestor of a Binary Tree",
      "url": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",
      "duration": 25,
      "epi": null,
      "difficulty": "Medium",
      "id": "80",
      "routines": [],
      "pattern": ["Binary Tree"],
      "solution": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/solutions/5948071/python-dfs/"
    },
    {
      "slug": "time-based-key-value-store",
      "title": "Time Based Key-Value Store",
      "url": "https://leetcode.com/problems/time-based-key-value-store",
      "duration": 35,
      "epi": null,
      "difficulty": "Medium",
      "id": "164",
      "routines": [],
      "pattern": ["Binary Search"]
    },
    {
      "slug": "accounts-merge",
      "title": "Accounts Merge",
      "url": "https://leetcode.com/problems/accounts-merge",
      "duration": 30,
      "epi": null,
      "difficulty": "Medium",
      "id": "165",
      "routines": ["depth-first-search", "union-find"],
      "pattern": ["Graph"]
    },
    {
      "slug": "sort-colors",
      "title": "Sort Colors",
      "url": "https://leetcode.com/problems/sort-colors",
      "duration": 25,
      "epi": 0,
      "difficulty": "Medium",
      "id": "166",
      "routines": ["two-pointers"],
      "pattern": ["Arrays"]
    },
    {
      "slug": "word-break",
      "title": "Word Break",
      "url": "https://leetcode.com/problems/word-break",
      "duration": 30,
      "epi": 2,
      "difficulty": "Medium",
      "id": "138",
      "routines": [],
      "pattern": ["Trie"],
      "solution": "https://leetcode.com/problems/word-break/solutions/5964625/python-iterative-dp-recursive-dp-memoization/"
    },
    {
      "slug": "partition-equal-subset-sum",
      "title": "Partition Equal Subset Sum",
      "url": "https://leetcode.com/problems/partition-equal-subset-sum",
      "duration": 30,
      "epi": 2,
      "difficulty": "Medium",
      "id": "167",
      "routines": [],
      "pattern": ["Dynamic Programming"]
    },
    {
      "slug": "string-to-integer-atoi",
      "title": "String to Integer (atoi)",
      "url": "https://leetcode.com/problems/string-to-integer-atoi",
      "duration": 25,
      "epi": 0,
      "difficulty": "Medium",
      "id": "168",
      "routines": [],
      "pattern": ["String"]
    },
    {
      "slug": "spiral-matrix",
      "title": "Spiral Matrix",
      "url": "https://leetcode.com/problems/spiral-matrix",
      "duration": 25,
      "epi": 1,
      "difficulty": "Medium",
      "id": "34",
      "routines": [],
      "pattern": ["Matrix"],
      "solution": "https://leetcode.com/problems/spiral-matrix/solutions/5913097/python-spiral-matrix-spiral-matrix-4-liner/"
    },
    {
      "slug": "subsets",
      "title": "Subsets",
      "url": "https://leetcode.com/problems/subsets",
      "duration": 30,
      "epi": 3,
      "difficulty": "Medium",
      "id": "169",
      "routines": ["backtracking"],
      "pattern": ["Recursion"],
      "solution": "https://leetcode.com/problems/subsets/solutions/5917942/python-iterative-recursive-backtracking-bit-manipulation/"
    },
    {
      "slug": "binary-tree-right-side-view",
      "title": "Binary Tree Right Side View",
      "url": "https://leetcode.com/problems/binary-tree-right-side-view",
      "duration": 20,
      "epi": null,
      "difficulty": "Medium",
      "id": "81",
      "routines": [],
      "pattern": ["Binary Tree"],
      "solution": "https://leetcode.com/problems/binary-tree-right-side-view/solutions/5922557/python-bfs-dfs/"
    },
    {
      "slug": "longest-palindromic-substring",
      "title": "Longest Palindromic Substring",
      "url": "https://leetcode.com/problems/longest-palindromic-substring",
      "duration": 25,
      "epi": null,
      "difficulty": "Medium",
      "id": "144",
      "routines": ["palindrome", "two-pointer", "dynamic-programming"],
      "pattern": ["String"],
      "solution": "https://leetcode.com/problems/longest-palindromic-substring/solutions/5964573/python-brute-force-expand-from-middle-manacher-s-algorithm/"
    },
    {
      "slug": "unique-paths",
      "title": "Unique Paths",
      "url": "https://leetcode.com/problems/unique-paths",
      "duration": 20,
      "epi": 2,
      "difficulty": "Medium",
      "id": "170",
      "routines": [],
      "pattern": ["Dynamic Programming"]
    },
    {
      "slug": "construct-binary-tree-from-preorder-and-inorder-traversal",
      "title": "Construct Binary Tree from Preorder and Inorder Traversal",
      "url": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",
      "duration": 25,
      "epi": 2,
      "difficulty": "Medium",
      "id": "71",
      "routines": [],
      "pattern": ["Binary Tree"],
      "solution": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/solutions/5953727/python-dfs/"
    },
    {
      "slug": "container-with-most-water",
      "title": "Container With Most Water",
      "url": "https://leetcode.com/problems/container-with-most-water",
      "duration": 35,
      "epi": 2,
      "difficulty": "Medium",
      "id": "27",
      "routines": ["greedy", "two-pointers"],
      "pattern": ["Arrays"]
    },
    {
      "slug": "letter-combinations-of-a-phone-number",
      "title": "Letter Combinations of a Phone Number",
      "url": "https://leetcode.com/problems/letter-combinations-of-a-phone-number",
      "duration": 30,
      "epi": 3,
      "difficulty": "Medium",
      "id": "100",
      "routines": ["backtracking"],
      "pattern": ["Recursion"]
    },
    {
      "slug": "word-search",
      "title": "Word Search",
      "url": "https://leetcode.com/problems/word-search",
      "duration": 30,
      "epi": null,
      "difficulty": "Medium",
      "id": "106",
      "routines": ["backtracking"],
      "pattern": ["Graph"],
      "solution": "https://leetcode.com/problems/word-search/solutions/5913319/python-dfs-backtracking/"
    },
    {
      "slug": "find-all-anagrams-in-a-string",
      "title": "Find All Anagrams in a String",
      "url": "https://leetcode.com/problems/find-all-anagrams-in-a-string",
      "duration": 30,
      "epi": null,
      "difficulty": "Medium",
      "id": "171",
      "routines": ["anagram"],
      "pattern": ["String"]
    },
    {
      "slug": "minimum-height-trees",
      "title": "Minimum Height Trees",
      "url": "https://leetcode.com/problems/minimum-height-trees",
      "duration": 30,
      "epi": null,
      "difficulty": "Medium",
      "id": "172",
      "routines": ["topo-sort"],
      "pattern": ["Graph"],
      "solution": "https://leetcode.com/problems/minimum-height-trees/solutions/5922194/python-topological-sort-bfs/"
    },
    {
      "slug": "task-scheduler",
      "title": "Task Scheduler",
      "url": "https://leetcode.com/problems/task-scheduler",
      "duration": 35,
      "epi": null,
      "difficulty": "Medium",
      "id": "173",
      "routines": [],
      "pattern": ["Heap"]
    },
    {
      "slug": "lru-cache",
      "title": "LRU Cache",
      "url": "https://leetcode.com/problems/lru-cache",
      "duration": 30,
      "epi": null,
      "difficulty": "Medium",
      "id": "66",
      "routines": ["hash-table"],
      "pattern": ["Linked List"]
    },
    {
      "slug": "kth-smallest-element-in-a-bst",
      "title": "Kth Smallest Element in a BST",
      "url": "https://leetcode.com/problems/kth-smallest-element-in-a-bst",
      "duration": 25,
      "epi": null,
      "difficulty": "Medium",
      "id": "86",
      "routines": [],
      "pattern": ["Binary Search Tree"],
      "solution": "https://leetcode.com/problems/kth-smallest-element-in-a-bst/solutions/5938150/python-dfs/"
    },
    {
      "slug": "minimum-window-substring",
      "title": "Minimum Window Substring",
      "url": "https://leetcode.com/problems/minimum-window-substring",
      "duration": 30,
      "epi": 3,
      "difficulty": "Hard",
      "id": "32",
      "routines": ["sliding-window"],
      "pattern": ["String"]
    },
    {
      "slug": "serialize-and-deserialize-binary-tree",
      "title": "Serialize and Deserialize Binary Tree",
      "url": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree",
      "duration": 40,
      "epi": null,
      "difficulty": "Hard",
      "id": "174",
      "routines": [],
      "pattern": ["Binary Tree"]
    },
    {
      "slug": "trapping-rain-water",
      "title": "Trapping Rain Water",
      "url": "https://leetcode.com/problems/trapping-rain-water",
      "duration": 35,
      "epi": null,
      "difficulty": "Hard",
      "id": "15",
      "routines": ["monotonic-stack"],
      "pattern": ["Stack"],
      "solution": "https://leetcode.com/problems/trapping-rain-water/solutions/5979699/python-two-pointer-maximum-value-reference-point/"
    },
    {
      "slug": "find-median-from-data-stream",
      "title": "Find Median from Data Stream",
      "url": "https://leetcode.com/problems/find-median-from-data-stream",
      "duration": 30,
      "epi": 3,
      "difficulty": "Hard",
      "id": "123",
      "routines": [],
      "pattern": ["Heap"]
    },
    {
      "slug": "word-ladder",
      "title": "Word Ladder",
      "url": "https://leetcode.com/problems/word-ladder",
      "duration": 45,
      "epi": null,
      "difficulty": "Hard",
      "id": "96",
      "routines": ["breadth-first-search"],
      "pattern": ["Graph"]
    },
    {
      "slug": "basic-calculator",
      "title": "Basic Calculator",
      "url": "https://leetcode.com/problems/basic-calculator",
      "duration": 40,
      "epi": null,
      "difficulty": "Hard",
      "id": "55",
      "routines": ["parsing"],
      "pattern": ["Stack"]
    },
    {
      "slug": "maximum-profit-in-job-scheduling",
      "title": "Maximum Profit in Job Scheduling",
      "url": "https://leetcode.com/problems/maximum-profit-in-job-scheduling",
      "duration": 45,
      "epi": null,
      "difficulty": "Hard",
      "id": "175",
      "routines": ["dynamic-programming"],
      "pattern": ["Binary Search"]
    },
    {
      "slug": "merge-k-sorted-lists",
      "title": "Merge k Sorted Lists",
      "url": "https://leetcode.com/problems/merge-k-sorted-lists",
      "duration": 30,
      "epi": null,
      "difficulty": "Hard",
      "id": "110",
      "routines": [],
      "pattern": ["Heap"]
    },
    {
      "slug": "largest-rectangle-in-histogram",
      "title": "Largest Rectangle in Histogram",
      "url": "https://leetcode.com/problems/largest-rectangle-in-histogram",
      "duration": 35,
      "epi": 3,
      "difficulty": "Hard",
      "id": "176",
      "routines": ["monotonic-stack"],
      "pattern": ["Stack"]
    }
  ]
}